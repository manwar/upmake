#!/usr/bin/env perl

use strict;
use warnings;
use autodie;

use Getopt::Long;

use Makefile::Update;
use Makefile::Update::Bakefile0;
use Makefile::Update::MSBuild;

my $verbose = 0;
my $quiet = 0;
my $dry_run = 0;

GetOptions(
        'verbose|v'      => \$verbose,
        'quiet|q'        => \$quiet,
        'dry-run|n'      => \$dry_run,
    ) and (@ARGV > 0) or die <<EOF
Usage: $0 [--verbose] [--quiet] [--dry-run|-n] <file-to-update...>

Update the sources and headers files used in the specified make/project
file(s) from the list of files in "files" file in the current directory.

If --dry-run option is specified, the files are not really updated, but the
script just indicates where they would be changed and, if --verbose is also
specified, outputs the diff.
EOF
;

# Helper calling upmake() to actually update the file and showing the result.
sub log_upmake
{
    my ($fname, $updater, @args) = @_;

    if ($dry_run) {
        my $old = do {
            local $/;
            open my $f, '<', $fname;
            <$f>
        };
        my $new = '';

        open my $in, '<', \$old;
        open my $out, '>', \$new;

        if ($updater->($in, $out, @args)) {
            print qq{Would update "$fname"};

            if ($verbose) {
                if (eval { require Text::Diff; }) {
                    print " with the following changes:\n";

                    print Text::Diff::diff(\$old, \$new, {
                                FILENAME_A => $fname,
                                FILENAME_B => "$fname.new"
                            });
                } else {
                    print ".\n";

                    warn qq{Can't display diff of the changes, please install Text::Diff module.\n};
                }
            } else {
                print ".\n";
            }
        } else {
            print qq{Wouldn't change the file "$fname".\n};
        }

        return 0;
    }

    if (upmake($fname, $updater, @args)) {
        print qq{File "$fname" successfully updated.\n} unless $quiet;
        return 1;
    } else {
        print qq{No changes in the file "$fname".\n} if $verbose;
        return 0;
    }
}

open my $files, '<', 'files';
my $vars = read_files_list($files);

foreach my $fname (@ARGV) {
    # What kind of file is it?
    if ($fname =~ /\.bkl$/) {
        if (log_upmake($fname, \&update_bakefile_0, $vars)) {
            print qq{Don't forget to run bakefile or bakefile_gen now.} if $verbose;
        }
    } elsif ($fname =~ /\.vcxproj$/) {
        my $sources = $vars->{sources};
        my $headers = $vars->{headers};
        log_upmake($fname, \&update_msbuild, $sources, $headers);
        log_upmake("$fname.filters", \&update_msbuild_filters, $sources, $headers);
    } else {
        die qq{File "$fname" is of unknown type, can't update.\n}
    }
}
